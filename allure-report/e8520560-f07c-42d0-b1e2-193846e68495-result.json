{"name": "test_invalid_login[Ulan-Zhukush]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'user not Found' in {'code': '1207', 'message': 'User not found!'}\n +  where {'code': '1207', 'message': 'User not found!'} = <bound method Response.json of <Response [404]>>()\n +    where <bound method Response.json of <Response [404]>> = <Response [404]>.json", "trace": "username = 'Ulan', password = 'Zhukush'\n\n    @pytest.mark.parametrize(\"username,password\", [(\"Ulan\", \"Zhukush\")])\n    @allure.feature(\"API Account\")\n    @allure.story(\"Login with not registered user\")\n    def test_invalid_login(username, password):\n        url = f\"{API_BASE_URL}/Account/v1/Authorized\"\n        payload = {\"userName\": username, \"password\": password}\n        response = requests.post(url, json=payload)\n        assert response.status_code == 404\n>       assert \"user not Found\" in response.json()\nE       AssertionError: assert 'user not Found' in {'code': '1207', 'message': 'User not found!'}\nE        +  where {'code': '1207', 'message': 'User not found!'} = <bound method Response.json of <Response [404]>>()\nE        +    where <bound method Response.json of <Response [404]>> = <Response [404]>.json\n\ntest_api.py:15: AssertionError"}, "parameters": [{"name": "username", "value": "'Ulan'"}, {"name": "password", "value": "'Zhukush'"}], "start": 1712568307390, "stop": 1712568308250, "uuid": "91368073-c2ba-4a64-9f91-825acefa3fbd", "historyId": "c0962234f72245fae34df2e5e235824f", "testCaseId": "a94025c83bad3783c32cec2da5dc9ac0", "fullName": "test_api#test_invalid_login", "labels": [{"name": "feature", "value": "API Account"}, {"name": "story", "value": "Login with not registered user"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-UJS8KTC"}, {"name": "thread", "value": "16552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}